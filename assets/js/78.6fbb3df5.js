(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{256:function(e,r,t){"use strict";t.r(r);var n=t(0),a=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"localization-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#localization-api","aria-hidden":"true"}},[e._v("#")]),e._v(" Localization API")]),e._v(" "),t("p",[e._v("EBA has a client side module called "),t("code",[e._v("L10n")]),e._v(". This module provides globalization support. It exposes a few top level functions which can be used in client side assets, and, additionally, it extends a global variable called "),t("code",[e._v("L10N")]),e._v(" with a set of useful functions.")]),e._v(" "),t("p",[e._v("Global globalization functions:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("trySetLocale(locale)")]),e._v(" -- tries to set the current locale, defaults to 'en' in case of failure.")]),e._v(" "),t("li",[t("code",[e._v("setLocale(locale)")]),e._v(" -- called by "),t("code",[e._v("trySetLocale")]),e._v(" which sets the locale and extends L10N with a set of useful formatting, parsing, and other globalized utility functions.")]),e._v(" "),t("li",[t("code",[e._v("renderDate(x)")]),e._v(" -- uses moment library to convert javascript dates using moment's "),t("code",[e._v("calendar")]),e._v(" function. Converts numbers to dates and returns 'N/A' in case value is neither date, string, nor number. Note that moment's locale is set during call to "),t("code",[e._v("setLocale")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("renderTags(x, color, key)")]),e._v(" -- renders a string 'x' or a prop 'tag' of object 'x' as a colored span. This is used by EBA to render tags within its knowledge graph.")]),e._v(" "),t("li",[t("code",[e._v("renderBoolean(x)")]),e._v(" -- renders boolean according to locale.")]),e._v(" "),t("li",[t("code",[e._v("renderDecimal(x)")]),e._v(" -- renders decimal value according to locale.")]),e._v(" "),t("li",[t("code",[e._v("renderPercent(x)")]),e._v(" -- renders percent value according to locale.")]),e._v(" "),t("li",[t("code",[e._v("renderCurrency(x, currency)")]),e._v(" -- renders currency value according to locale, defaults to USD if currency is not provided as second argument.")]),e._v(" "),t("li",[t("code",[e._v("renderDuration(duration)")]),e._v(" -- renders duration according as microsecond, millisecond, second, or minute.")]),e._v(" "),t("li",[t("code",[e._v("formatLanguage(locale, displayLocale)")]),e._v(" -- given a locale and optional displayLocale, displays the language in English as well as the native locale, e.g. `formatLanguage('de') returns \"German â€“ Deutsch\".")])]),e._v(" "),t("p",[e._v("L10N global object API. Note that this api utilizes globalize.js to apply the appropriate locale normalizations.")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("renderDate(x)")]),e._v(" -- renders date value 'x' as a medium date, e.g. L10N.renderDate(new Date()) can return \"Feb 4, 2019\"")]),e._v(" "),t("li",[t("code",[e._v("renderDateShort(x)")]),e._v(" --  renders date value 'x' as a short date, e.g. L10N.renderDateShort(new Date()) can return \"2/4/19\"")]),e._v(" "),t("li",[t("code",[e._v("renderTime(x)")]),e._v(" -- renders date value 'x' as a medium time value, e.g. L10N.renderTime(new Date()) can return \"4:23:00 PM\"")]),e._v(" "),t("li",[t("code",[e._v("renderDateTime(x)")]),e._v(" -- renders date value 'x' as a date time value, e.g. L10N.renderDateTime(new Date()) can return \"Feb 4, 2019, 4:23:16 PM\"")]),e._v(" "),t("li",[t("code",[e._v("formatNumber(x)")]),e._v(" -- returns the string representation of the number 'x', e.g. L10N.formatNumber(10) return \"10\"")]),e._v(" "),t("li",[t("code",[e._v("formatNumberSigned(x)")]),e._v(" -- returns the string representation of the signed number 'x', e.g. L10N.formatNumberSigned(10) return \"+10\"")]),e._v(" "),t("li",[t("code",[e._v("formatNumberScaled(x)")]),e._v(" -- returns the string representation of the scaled number 'x'")]),e._v(" "),t("li",[t("code",[e._v("formatNumberPrecise(x)")]),e._v(" -- returns the string representation of the precise number 'x', e.g. L10N.formatNumberPrecise(10.1) return \"10.1\"")]),e._v(" "),t("li",[t("code",[e._v("formatNumberRounded(x)")]),e._v(" -- returns the string representation of the rounded number 'x', e.g. L10N.formatNumberRounded(10.1) return \"10\"")]),e._v(" "),t("li",[t("code",[e._v("formatPercent(x)")]),e._v(" -- returns the string representation of the 'x' as a percent, e.g. L10N.formatPercent(0.27) returns \"27%\"")]),e._v(" "),t("li",[t("code",[e._v("formatPercentWith(options)")]),e._v(" -- like formatPercent, but with options")]),e._v(" "),t("li",[t("code",[e._v("formatPercentSigned(x)")]),e._v(" -- returns the string representation of the 'x' as a signed percent, e.g. L10N.formatPercentSigned(0.27) returns \"+27%\"")]),e._v(" "),t("li",[t("code",[e._v("formatPercentNacked(x)")]),e._v(" -- returns the string representation of the 'x' as a percent without percentege sign, e.g. L10N.formatPercentNacked(0.27) returns \"27\"")]),e._v(" "),t("li",[t("code",[e._v("formatPercentNackedSigned")]),e._v(" -- returns the string representation of the 'x' as a signed percent without percentege sign, e.g. L10N.formatPercentNackedSigned(0.27) returns \"+27\"\nNote: formatPercentWith, parseDate, formatNumberScaled")]),e._v(" "),t("li",[t("code",[e._v("formatCurrency(currency)")]),e._v(" -- returns a function which applies the appropriate currency formatting, e.g. L10N.formatCurrency('USD')(42) returns \"$42.00\"")]),e._v(" "),t("li",[t("code",[e._v("formatCurrencySigned(currency)")]),e._v(" -- returns a function which applies the appropriate currency formatting using signed value, e.g. L10N.formatCurrency('USD')(42) returns \"+$42.00\"")]),e._v(" "),t("li",[t("code",[e._v("formatCurrencyScaled(currency)")]),e._v(" -- returns a function which applies the appropriate currency formatting using scaled value, e.g. L10N.formatCurrencyScaled('USD')(42.4) returns \"$42.4\"")]),e._v(" "),t("li",[t("code",[e._v("formatCurrencyNacked(currency)")]),e._v(" -- returns a function which applies the appropriate currency formatting using nacked value, e.g. L10N.formatCurrencyNacked('USD')(42.4) returns \"42.40\"")]),e._v(" "),t("li",[t("code",[e._v("formatCurrencyNackedSigned(currency)")]),e._v(" -- returns a function which applies the appropriate currency formatting using nacked value, e.g. L10N.formatCurrencyNackedSigned('USD')(42.4) returns \"+42.40\"")]),e._v(" "),t("li",[t("code",[e._v("formatCurrencyRounded(currency)")]),e._v(" -- returns a function which applies the appropriate currency formatting using nacked value, e.g. L10N.formatCurrencyRounded('USD')(42.555) returns \"$42.56\"")]),e._v(" "),t("li",[t("code",[e._v("formatBoolean")]),e._v(" -- returns the 'yes' or 'no' string equivalent of a boolean, e.g. L10N.formatBoolean(true) returns \"yes\"")]),e._v(" "),t("li",[t("ul",[t("li",[t("code",[e._v("parseDate(x)")]),e._v(" -- parses date string x as date)")])])]),e._v(" "),t("li",[t("code",[e._v("parseNumber(x)")]),e._v(' -- parses a string representation of a number and returns the number, e.g. L10N.parseNumber("10") returns 10')]),e._v(" "),t("li",[t("code",[e._v("parsePercent(x)")]),e._v(' -- parses a string representation of a percent and returns the percent, e.g. L10N.parsePercent("10%") returns 0.1')]),e._v(" "),t("li",[t("code",[e._v("parsePercentNacked(x)")]),e._v(' -- parses a string representation of a nacked percent and returns the percent, e.g. L10N.parsePercentNacked("10") returns 0.1')]),e._v(" "),t("li",[t("code",[e._v("currencySymbol")]),e._v(" -- property which returns the currency symbol")]),e._v(" "),t("li",[t("code",[e._v("percentSign")]),e._v(" -- property which returns the percent sign")]),e._v(" "),t("li",[t("code",[e._v("weekDays")]),e._v(" -- property returns the week days")]),e._v(" "),t("li",[t("code",[e._v("weekDaysKeys")]),e._v(" -- property returns the week days keys")]),e._v(" "),t("li",[t("code",[e._v("direction")]),e._v(" -- property returns the script direction, e.g. rtl for right to left and ltr for left to right")])])])}],!1,null,null,null);r.default=a.exports}}]);